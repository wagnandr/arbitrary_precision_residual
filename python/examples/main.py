import hpresidual as hp
import numpy as np
import scipy.sparse as sps

#hp.set_precision(128)
hp.set_precision(64)

data = [1.0, 130321.0, -521284.0, 651605.0, -261003.0, 130321.0, -521284.0, 781926.0, -521284.0, 130321.0, 130321.0, -521284.0, 781926.0, -521284.0, 130321.0, 130321.0, -521284.0, 781926.0, -521284.0, 130321.0, 130321.0, -521284.0, 781926.0, -521284.0, 130321.0, 130321.0, -521284.0, 781926.0, -521284.0, 130321.0, 130321.0, -521284.0, 781926.0, -521284.0, 130321.0, 130321.0, -521284.0, 781926.0, -521284.0, 130321.0, 130321.0, -521284.0, 781926.0, -521284.0, 130321.0, 130321.0, -521284.0, 781926.0, -521284.0, 130321.0, 130321.0, -521284.0, 781926.0, -521284.0, 130321.0, 130321.0, -521284.0, 781926.0, -521284.0, 130321.0, 130321.0, -521284.0, 781926.0, -521284.0, 130321.0, 130321.0, -521284.0, 781926.0, -521284.0, 130321.0, 130321.0, -521284.0, 781926.0, -521284.0, 130321.0, 130321.0, -521284.0, 781926.0, -521284.0, 130321.0, 130321.0, -521284.0, 781926.0, -521284.0, 130321.0, -261003.0, 651605.0, -521284.0, 130321.0, 1.0]
indices = [0, 3, 2, 1, 0, 4, 3, 2, 1, 0, 5, 4, 3, 2, 1, 6, 5, 4, 3, 2, 7, 6, 5, 4, 3, 8, 7, 6, 5, 4, 9, 8, 7, 6, 5, 10, 9, 8, 7, 6, 11, 10, 9, 8, 7, 12, 11, 10, 9, 8, 13, 12, 11, 10, 9, 14, 13, 12, 11, 10, 15, 14, 13, 12, 11, 16, 15, 14, 13, 12, 17, 16, 15, 14, 13, 18, 17, 16, 15, 14, 19, 18, 17, 16, 15, 19, 18, 17, 16, 19]
indptr = [0, 1, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 89, 90]

A = sps.csr_matrix((data,indices,indptr))

hpr = hp.HPResidual(A)

b = np.zeros(A.shape[0])


vec = ["0.0", "0.0534015366915524892235403132494", "0.105346418669576032168367131714", "0.15441772496391131386029470982", "0.199276918258197296948512486465", "0.238700356698555186511720736606", "0.271612671653565996466721647564", "0.29711610096725885601096281866", "0.314514977570434618701466245735", "0.32333470546484491144725298956", "0.323334705464844917836210318094", "0.314514977570434637694064130183", "0.297116100967258887089132698743", "0.271612671653566038782732063696", "0.23870035669855523891130123424", "0.199276918258197358002339105137", "0.154417724963911381902978214822", "0.105346418669576105343880491065", "0.053401536691552565535846276835", "7.73674977924677158995798481725e-17"]
hpr._cpp.set_x_from_string(vec)
hpr._cpp.copy_to_b(b)

x = np.zeros(A.shape[0])
hpr._cpp.evaluate(x)

expected = - 31.3525200524180975508807811669

print(abs(x[10] - expected))
#hpr._cpp.copy_to_b(b)
